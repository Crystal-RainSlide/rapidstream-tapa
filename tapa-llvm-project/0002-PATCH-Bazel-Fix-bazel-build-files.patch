From 7dab4b554f6cc1485f475c9b9bb34e4526931676 Mon Sep 17 00:00:00 2001
From: Jason Lau <lau@rapidstream-da.com>
Date: Mon, 19 Aug 2024 22:17:40 -0700
Subject: [PATCH 2/3] [PATCH] [Bazel] Fix bazel build files

Credit: Alexander Khabarov <alexander.khabarov@arm.com>

---
 BUILD.bazel        | 4 ++++
 MODULE.bazel       | 11 +++++++++++
 clang/BUILD.bazel  | 16 +++++++++++++---
 llvm/BUILD.bazel   |  7 +++++++
 llvm/targets.bzl   | 21 +++++++++++++++++++++
 llvm/tblgen.bzl    |  2 +-
 vars.bzl           |  5 +++++
 workspace_root.bzl | 17 +++++++++++++++++
 8 files changed, 79 insertions(+), 4 deletions(-)
 create mode 100644 BUILD.bazel
 create mode 100644 MODULE.bazel
 create mode 100644 llvm/targets.bzl
 create mode 100644 vars.bzl
 create mode 100644 workspace_root.bzl

diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100644
index 000000000..f945718c2
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,11 @@
+module(
+    name = "llvm-project",
+    version = "16.0.0",
+)
+
+# Skylark depedndencies
+bazel_dep(name = "bazel_skylib", version = "1.3.0")
+
+# Library dependencies
+bazel_dep(name = "platforms", version = "0.0.7")
+bazel_dep(name = "rules_cc", version = "0.0.9")
diff --git a/clang/BUILD.bazel b/clang/BUILD.bazel
index 5e70c3392..d610a63da 100644
--- a/clang/BUILD.bazel
+++ b/clang/BUILD.bazel
@@ -2,6 +2,7 @@
 # See https://llvm.org/LICENSE.txt for license information.
 # SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
 
+load("//:workspace_root.bzl", "workspace_root")
 load("@bazel_skylib//rules:expand_template.bzl", "expand_template")
 load("//llvm:tblgen.bzl", "gentbl")
 load("//llvm:binary_alias.bzl", "binary_alias")
@@ -717,6 +718,8 @@ gentbl(
     ],
 )
 
+workspace_root(name = "workspace_root")
+
 cc_library(
     name = "ast",
     srcs = glob([
@@ -741,8 +744,9 @@ cc_library(
         # least bad approach. Using `includes` is *specifically* problematic for
         # this library because it contains files that collide easily with system
         # headers such as `CXXABI.h`.
-        "-I$(GENDIR)/external/llvm-project/clang/lib/AST",
-        "-I$(GENDIR)/external/llvm-project/clang/lib/AST/Interp",
+        "-I$(GENDIR)/$(WORKSPACE_ROOT)/clang/lib/AST",
+        "-I$(GENDIR)/$(WORKSPACE_ROOT)/clang/lib/AST/ByteCode",
+        "-I$(GENDIR)/$(WORKSPACE_ROOT)/clang/lib/AST/Interp",
     ],
     textual_hdrs = [
         "include/clang/AST/AttrImpl.inc",
@@ -762,6 +766,9 @@ cc_library(
     ] + glob([
         "include/clang/AST/*.def",
     ]),
+    toolchains = [
+        ":workspace_root",
+    ],
     deps = [
         ":ast_attr_gen",
         ":ast_comment_command_info_gen",
@@ -1525,12 +1532,15 @@ genrule(
     outs = [hdr.replace("lib/Headers/", "staging/include/") for hdr in builtin_headers],
     cmd = """
        for src in $(SRCS); do
-         relsrc=$${src/*external\\/llvm-project\\/clang\\/lib\\/Headers\\/}
+         relsrc=$${src/*"$(WORKSPACE_ROOT)"\\/clang\\/lib\\/Headers}
          target=$(@D)/staging/include/$$relsrc
          mkdir -p $$(dirname $$target)
          cp $$src $$target
        done""",
     output_to_bindir = 1,
+    toolchains = [
+        ":workspace_root",
+    ],
 )
 
 cc_library(
diff --git a/llvm/BUILD.bazel b/llvm/BUILD.bazel
index b01f04748..508dde999 100644
--- a/llvm/BUILD.bazel
+++ b/llvm/BUILD.bazel
@@ -208,11 +208,18 @@ cc_library(
         "@platforms//cpu:aarch64": [
             "lib/Support/BLAKE3/blake3_neon.c",
         ],
+        "@bazel_tools//src/conditions:windows_x64": [
+            "lib/Support/BLAKE3/blake3_avx2_x86-64_windows_msvc.asm",
+            "lib/Support/BLAKE3/blake3_avx512_x86-64_windows_msvc.asm",
+            "lib/Support/BLAKE3/blake3_sse2_x86-64_windows_msvc.asm",
+            "lib/Support/BLAKE3/blake3_sse41_x86-64_windows_msvc.asm",
+        ],
         "@platforms//cpu:x86_64": [
             "lib/Support/BLAKE3/blake3_sse2_x86-64_unix.S",
             "lib/Support/BLAKE3/blake3_sse41_x86-64_unix.S",
             "lib/Support/BLAKE3/blake3_avx2_x86-64_unix.S",
             "lib/Support/BLAKE3/blake3_avx512_x86-64_unix.S",
+            "lib/Support/BLAKE3/llvm_blake3_prefix.h",
         ],
         "//conditions:default": [
         ],
diff --git a/llvm/targets.bzl b/llvm/targets.bzl
new file mode 100644
index 000000000..7a31d801e
--- /dev/null
+++ b/llvm/targets.bzl
@@ -0,0 +1,21 @@
+llvm_targets = [
+    "AArch64",
+    "AMDGPU",
+    "ARM",
+    "AVR",
+    "BPF",
+    "Hexagon",
+    "Lanai",
+    "LoongArch",
+    "Mips",
+    "MSP430",
+    "NVPTX",
+    "PowerPC",
+    "RISCV",
+    "Sparc",
+    "SystemZ",
+    "VE",
+    "WebAssembly",
+    "X86",
+    "XCore",
+]
diff --git a/llvm/tblgen.bzl b/llvm/tblgen.bzl
index d43390918..9486edf29 100644
--- a/llvm/tblgen.bzl
+++ b/llvm/tblgen.bzl
@@ -35,7 +35,7 @@ def gentbl(
       tblgen_args: Extra arguments string to pass to the tblgen binary.
       **kwargs: Keyword arguments to pass to subsidiary cc_library() rule.
     """
-    llvm_project_execroot_path = Label("//llvm:tblgen.bzl").workspace_root
+    llvm_project_execroot_path = Label("//llvm:tblgen.bzl").workspace_root or "."
 
     if td_file not in td_srcs:
         td_srcs += [td_file]
diff --git a/vars.bzl b/vars.bzl
new file mode 100644
index 000000000..d744043d9
--- /dev/null
+++ b/vars.bzl
@@ -0,0 +1,5 @@
+LLVM_VERSION = "16.0.0"
+LLVM_VERSION_MAJOR = 16
+LLVM_VERSION_MINOR = 0
+LLVM_VERSION_PATCH = 0
+
diff --git a/workspace_root.bzl b/workspace_root.bzl
new file mode 100644
index 000000000..2932fb143
--- /dev/null
+++ b/workspace_root.bzl
@@ -0,0 +1,17 @@
+def _workspace_root_impl(ctx):
+    """Dynamically determine the workspace root from the current context.
+
+    The path is made available as a `WORKSPACE_ROOT` environmment variable and
+    may for instance be consumed in the `toolchains` attributes for `cc_library`
+    and `genrule` targets.
+    """
+    return [
+        platform_common.TemplateVariableInfo({
+            "WORKSPACE_ROOT": ctx.label.workspace_root,
+        }),
+    ]
+
+workspace_root = rule(
+    implementation = _workspace_root_impl,
+    attrs = {},
+)
diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 000000000..05c507654
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,4 @@
+# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
+# See https://llvm.org/LICENSE.txt for license information.
+# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
+
-- 

