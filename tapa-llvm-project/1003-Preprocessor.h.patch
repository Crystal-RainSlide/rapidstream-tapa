--- a/clang/include/clang/Lex/Preprocessor.h	2023-11-28 00:52:28.000000000 -0800
+++ b/clang/include/clang/Lex/Preprocessor.h	2024-06-18 12:50:08.990988047 -0700
@@ -1626,7 +1626,7 @@
   /// Process directives while skipping until the through header or
   /// #pragma hdrstop is found.
   void HandleSkippedDirectiveWhileUsingPCH(Token &Result,
-                                           SourceLocation HashLoc);
+                                           Token &HashTok);
 
   /// Enter the specified FileID as the main source file,
   /// which implicitly adds the builtin defines etc.
@@ -2677,17 +2677,17 @@
       ModuleMap::KnownHeader &SuggestedModule, bool isAngled);
 
   // File inclusion.
-  void HandleIncludeDirective(SourceLocation HashLoc, Token &Tok,
+  void HandleIncludeDirective(Token &HashTok, Token &Tok,
                               ConstSearchDirIterator LookupFrom = nullptr,
                               const FileEntry *LookupFromFile = nullptr);
   ImportAction
-  HandleHeaderIncludeOrImport(SourceLocation HashLoc, Token &IncludeTok,
+  HandleHeaderIncludeOrImport(Token &HashTok, Token &IncludeTok,
                               Token &FilenameTok, SourceLocation EndLoc,
                               ConstSearchDirIterator LookupFrom = nullptr,
                               const FileEntry *LookupFromFile = nullptr);
-  void HandleIncludeNextDirective(SourceLocation HashLoc, Token &Tok);
-  void HandleIncludeMacrosDirective(SourceLocation HashLoc, Token &Tok);
-  void HandleImportDirective(SourceLocation HashLoc, Token &Tok);
+  void HandleIncludeNextDirective(Token &HashTok, Token &Tok);
+  void HandleIncludeMacrosDirective(Token &HashTok, Token &Tok);
+  void HandleImportDirective(Token &HashTok, Token &Tok);
   void HandleMicrosoftImportDirective(Token &Tok);
 
 public:
